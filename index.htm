<html>
    <head>
        
        <style>
            * {
                margin: 0;
                padding: 0;
                overflow: hidden;
            }
            .slider {
                position: fixed;
                top: 10px;
                right: 20px;
                width: 150px;
                color: white;
                font-family: sans-serif;
                text-align: right;
            }
            .slider input {
                width: 100%;
                margin-bottom: 5px;
            }

            #c {
                display: block;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }
            #siteTag {
                position: absolute;
                border-radius: 15px 15px 0 0;
                bottom: 0;
                right: 20px;
                background-color: white;
                border-color: gray;
                padding-top: 5px;
                padding-bottom: 5px;
                padding-left: 10px;
                padding-right: 10px;
                color: black;
                text-decoration: none;
                font-weight: 500;
            }
        </style>
    </head>
    <body>
        <a id="siteTag" href="https://cyrexag.com" target="_blank"
            >Andrew Gosselin</a
        >
        <canvas id="stars"></canvas>
        <div class="slider">
            <input type="range" min="0.5" max="15" value="15" step="0.5" />
            Speed: <span id="speed"></span>
        </div>

        <canvas id="c"></canvas>
        <script>
            (function () {
                var lastTime = 0;
                var vendors = ["ms", "moz", "webkit", "o"];
                for (
                    var x = 0;
                    x < vendors.length && !window.requestAnimationFrame;
                    ++x
                ) {
                    window.requestAnimationFrame =
                        window[vendors[x] + "RequestAnimationFrame"];
                    window.cancelAnimationFrame =
                        window[vendors[x] + "CancelAnimationFrame"] ||
                        window[vendors[x] + "CancelRequestAnimationFrame"];
                }

                if (!window.requestAnimationFrame)
                    window.requestAnimationFrame = function (
                        callback,
                        element
                    ) {
                        var currTime = new Date().getTime();
                        var timeToCall = Math.max(
                            0,
                            16 - (currTime - lastTime)
                        );
                        var id = window.setTimeout(function () {
                            callback(currTime + timeToCall);
                        }, timeToCall);
                        lastTime = currTime + timeToCall;
                        return id;
                    };

                if (!window.cancelAnimationFrame)
                    window.cancelAnimationFrame = function (id) {
                        clearTimeout(id);
                    };
            })();
            // ends requestAnimationFrame polyfill

            var c = document.getElementById("c");
            var bc = document.createElement("canvas");
            var ctx = c.getContext("2d");
            var bCtx = bc.getContext("2d");
            var cw = (c.width = bc.width = 750),
                cx = cw / 2;
            var ch = (c.height = bc.height = 130),
                cy = ch / 2;
            var rad = Math.PI / 180;
            var maxParticles = 60;
            var speed = 0.015;
            var text = "YES";
            ctx.textAlign = "center";
            ctx.textBaseline = "middle";
            ctx.font = "120px Arial black";
            ctx.lineWidth = 2;
            ctx.strokeStyle = "#555";
            ctx.fillStyle = "rgb(0,0,0)";

            var particlesRy = new Array();

            function particles() {
                this.x = Math.round(Math.random() * cw) + 1;
                this.y = Math.round(Math.random() * ch) + 1;
                this.r = randomIntFromInterval(20, 60);
                this.color =
                    "hsl(" +
                    (Math.round(Math.random() * 360) + 1) +
                    ",100%,50%)";
                this.pm = Math.random() < 0.5 ? -1 : 1; //plus or minus
                this.drift = this.pm * speed;
                this.fall = this.pm * speed;
            }

            function createParticles() {
                var l = particlesRy.length;
                particlesRy[l] = new particles();
                bCtx.fillStyle = particlesRy[l].color;
                bCtx.beginPath();
                bCtx.arc(
                    particlesRy[l].x,
                    particlesRy[l].y,
                    particlesRy[l].r,
                    0,
                    2 * Math.PI
                );
                bCtx.fill();
            }

            function updateParticles() {
                bCtx.clearRect(0, 0, cw, ch);
                for (var j = 0; j < particlesRy.length; j++) {
                    if (particlesRy[j].x >= cw || particlesRy[j].x <= 0) {
                        particlesRy[j].drift = -1 * particlesRy[j].drift;
                    }
                    if (particlesRy[j].y >= ch || particlesRy[j].y <= 0) {
                        particlesRy[j].fall = -1 * particlesRy[j].fall;
                    }
                    particlesRy[j].y += particlesRy[j].fall;
                    particlesRy[j].x += particlesRy[j].drift;

                    bCtx.fillStyle = particlesRy[j].color;
                    bCtx.beginPath();
                    bCtx.arc(
                        particlesRy[j].x,
                        particlesRy[j].y,
                        particlesRy[j].r,
                        0,
                        2 * Math.PI
                    );
                    bCtx.fill();
                }
            }

            window.addEventListener(
                "load",
                function () {
                    for (var i = 0; i < maxParticles; i++) {
                        createParticles();
                        bCtx.globalCompositeOperation = "xor";
                    }

                    drawText();

                    requestId = window.requestAnimationFrame(Draw);
                },
                false
            );

            function Draw() {
                for (var i = 0; i < maxParticles; i++) {
                    updateParticles();
                    bCtx.globalCompositeOperation = "xor";
                }

                drawText();

                requestId = window.requestAnimationFrame(Draw);
            }


            function getRandomInt(max) {
                return Math.floor(Math.random() * max);
            }

            function drawText() {
                let number = getRandomInt(10000);
                if(number < 500) {
                    text = "NO";
                }
                ctx.beginPath();

                ctx.fillText(text, cw / 2, ch / 2);
                ctx.strokeText(text, cw / 2, ch / 2);

                ctx.globalCompositeOperation = "source-atop";

                var img = bc;
                ctx.drawImage(img, 0, 0);
            }

            function randomIntFromInterval(mn, mx) {
                return ~~(Math.random() * (mx - mn + 1) + mn);
            }

            // SPACE
            // DOM selectors
            const stars = document.getElementById("stars");
            const starsCtx = stars.getContext("2d");
            const slider = document.querySelector(".slider input");
            const output = document.querySelector("#speed");

            // global variables
            let screen,
                starsElements,
                starsParams = { speed: 15, number: 300, extinction: 4 };

            // run stars
            setupStars();
            updateStars();

            // handle slider
            output.innerHTML = slider.value;
            slider.oninput = function () {
                output.innerHTML = this.value;
                starsParams.speed = this.value;
            };

            // update stars on resize to keep them centered
            window.onresize = function () {
                setupStars();
            };

            // star constructor
            function Star() {
                this.x = Math.random() * stars.width;
                this.y = Math.random() * stars.height;
                this.z = Math.random() * stars.width;

                this.move = function () {
                    this.z -= starsParams.speed;
                    if (this.z <= 0) {
                        this.z = stars.width;
                    }
                };

                this.show = function () {
                    let x, y, rad, opacity;
                    x = (this.x - screen.c[0]) * (stars.width / this.z);
                    x = x + screen.c[0];
                    y = (this.y - screen.c[1]) * (stars.width / this.z);
                    y = y + screen.c[1];
                    rad = stars.width / this.z;
                    opacity =
                        rad > starsParams.extinction
                            ? 1.5 * (2 - rad / starsParams.extinction)
                            : 1;

                    starsCtx.beginPath();
                    starsCtx.fillStyle = "rgba(255, 255, 255, " + opacity + ")";
                    starsCtx.arc(x, y, rad, 0, Math.PI * 2);
                    starsCtx.fill();
                };
            }

            // setup <canvas>, create all the starts
            function setupStars() {
                screen = {
                    w: window.innerWidth,
                    h: window.innerHeight,
                    c: [window.innerWidth * 0.5, window.innerHeight * 0.5],
                };
                window.cancelAnimationFrame(updateStars);
                stars.width = screen.w;
                stars.height = screen.h;
                starsElements = [];
                for (let i = 0; i < starsParams.number; i++) {
                    starsElements[i] = new Star();
                }
            }

            // redraw the frame
            function updateStars() {
                starsCtx.fillStyle = "black";
                starsCtx.fillRect(0, 0, stars.width, stars.height);
                starsElements.forEach(function (s) {
                    s.show();
                    s.move();
                });
                window.requestAnimationFrame(updateStars);
            }
        </script>
    </body>
</html>
